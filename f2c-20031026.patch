--- ./src/f2c.1t.20031026	2002-06-21 20:40:35.000000000 +0200
+++ ./src/f2c.1t	2004-02-04 10:51:05.000000000 +0100
@@ -354,10 +354,7 @@
 header file
 .TP
 .F /usr/lib/libF77.a
-intrinsic function library
-.TP
-.F /usr/lib/libI77.a
-Fortran I/O library
+f2c function library
 .TP
 .F /lib/libc.a
 C library, see section 3
--- ./src/f2c.h.20031026	1999-09-07 19:46:24.000000000 +0200
+++ ./src/f2c.h	2004-02-04 10:51:05.000000000 +0100
@@ -7,6 +7,25 @@
 #ifndef F2C_INCLUDE
 #define F2C_INCLUDE
 
+#ifdef __alpha__
+
+typedef int integer;
+typedef unsigned uinteger;
+typedef char *address;
+typedef short int shortint;
+typedef float real;
+typedef double doublereal;
+typedef struct { real r, i; } complex;
+typedef struct { doublereal r, i; } doublecomplex;
+typedef int logical;
+typedef short int shortlogical;
+typedef char logical1;
+typedef char integer1;
+
+
+
+#else
+
 typedef long int integer;
 typedef unsigned long int uinteger;
 typedef char *address;
@@ -26,6 +45,8 @@
 #define qbit_set(a,b)	((a) |  ((ulongint)1 << (b)))
 #endif
 
+#endif /* __alpha__ */
+
 #define TRUE_ (1)
 #define FALSE_ (0)
 
@@ -42,11 +63,22 @@
 typedef short ftnlen;
 typedef short ftnint;
 #else
+
+#ifdef __alpha__
+
+typedef int flag;
+typedef int ftnlen;
+typedef int ftnint;
+
+#else
+
 typedef long int flag;
 typedef long int ftnlen;
 typedef long int ftnint;
 #endif
 
+#endif /* __alpha__ */
+
 /*external read, write*/
 typedef struct
 {	flag cierr;
--- ./src/makefile.u.20031026	2003-10-27 05:36:02.000000000 +0100
+++ ./src/makefile.u	2004-02-04 10:52:02.000000000 +0100
@@ -1,8 +1,8 @@
 #	Makefile for f2c, a Fortran 77 to C converter
 
 .SUFFIXES: .c .o
-CC = cc
-CFLAGS = -O
+CC = gcc
+CFLAGS = $(RPM_OPT_FLAGS)
 SHELL = /bin/sh
 YACC = yacc
 YFLAGS =
--- ./libf2c/f2c.h0.20031026	1999-09-07 13:46:24.000000000 +0200
+++ ./libf2c/f2c.h0	2004-02-04 10:51:05.000000000 +0100
@@ -7,6 +7,26 @@
 #ifndef F2C_INCLUDE
 #define F2C_INCLUDE
 
+#ifdef __alpha__
+
+typedef int integer;
+typedef unsigned uinteger;
+typedef char *address;
+typedef short int shortint;
+typedef float real;
+typedef double doublereal;
+typedef struct { real r, i; } complex;
+typedef struct { doublereal r, i; } doublecomplex;
+typedef int logical;
+typedef short int shortlogical;
+typedef char logical1;
+typedef char integer1;
+
+
+
+#else
+
+
 typedef long int integer;
 typedef unsigned long int uinteger;
 typedef char *address;
@@ -26,6 +46,8 @@
 #define qbit_set(a,b)	((a) |  ((ulongint)1 << (b)))
 #endif
 
+#endif /* __alpha__ */
+
 #define TRUE_ (1)
 #define FALSE_ (0)
 
@@ -42,9 +64,21 @@
 typedef short ftnlen;
 typedef short ftnint;
 #else
+
+#ifdef __alpha__
+
+typedef int flag;
+typedef int ftnlen;
+typedef int ftnint;
+
+#else
+
 typedef long int flag;
 typedef long int ftnlen;
 typedef long int ftnint;
+
+#endif /* __alpha__ */
+
 #endif
 
 /*external read, write*/
--- ./libf2c/makefile.u.20031026	2003-06-06 15:09:42.000000000 +0200
+++ ./libf2c/makefile.u	2004-02-04 10:51:05.000000000 +0100
@@ -13,15 +13,17 @@
 # to the CFLAGS = line below.
 
 .SUFFIXES: .c .o
-CC = cc
+CC = gcc
 SHELL = /bin/sh
-CFLAGS = -O
+CFLAGS = $(RPM_OPT_FLAGS) -DNON_UNIX_STDIO
+SHARED = libf2c.so.0.22
 
 # compile, then strip unnecessary symbols
 .c.o:
 	$(CC) -c -DSkip_f2c_Undefs $(CFLAGS) $*.c
-	ld -r -x -o $*.xxx $*.o
-	mv $*.xxx $*.o
+%.o : %.c \
+	$(CC) -c $(CFLAGS) $(CPPFLAGS) -f -o $@ $<
+
 ## Under Solaris (and other systems that do not understand ld -x),
 ## omit -x in the ld line above.
 ## If your system does not have the ld command, comment out
@@ -69,11 +71,12 @@
 OFILES = $(MISC) $(POW) $(CX) $(DCX) $(REAL) $(DBL) $(INT) \
 	$(HALF) $(CMP) $(EFL) $(CHAR) $(I77) $(TIME)
 
-all: f2c.h signal1.h sysdep1.h libf2c.a
+all: f2c.h signal1.h sysdep1.h libf2c.a $(SHARED)
 
 libf2c.a: $(OFILES)
-	ar r libf2c.a $?
-	-ranlib libf2c.a
+	ar r $@ $?
+	-ranlib $@
+
 
 ## Shared-library variant: the following rule works on Linux
 ## systems.  Details are system-dependent.  Under Linux, -fPIC
@@ -81,9 +84,9 @@
 ## Under Solaris, use -Kpic in CFLAGS and use "ld -G" instead
 ## of "cc -shared".
 
-libf2c.so: $(OFILES)
-	cc -shared -o libf2c.so $(OFILES)
-
+$(SHARED): $(OFILES)
+	$(CC) -shared -Wl,-soname,libf2c.so.0 -o $@ $(OFILES) -lm -lc
+ 
 ### If your system lacks ranlib, you don't need it; see README.
 
 f77vers.o: f77vers.c
@@ -122,7 +125,7 @@
 	-ranlib $(LIBDIR)/libf2c.a
 
 clean:
-	rm -f libf2c.a *.o arith.h signal1.h sysdep1.h
+	rm -f libf2c.a *.o arith.h signal1.h sysdep1.h $(SHARED)
 
 backspac.o:	fio.h
 close.o:	fio.h
--- ./f2c.h.20031026	1999-09-07 19:46:24.000000000 +0200
+++ ./f2c.h	2004-02-04 10:51:05.000000000 +0100
@@ -7,6 +7,25 @@
 #ifndef F2C_INCLUDE
 #define F2C_INCLUDE
 
+#ifdef __alpha__
+
+typedef int integer;
+typedef unsigned uinteger;
+typedef char *address;
+typedef short int shortint;
+typedef float real;
+typedef double doublereal;
+typedef struct { real r, i; } complex;
+typedef struct { doublereal r, i; } doublecomplex;
+typedef int logical;
+typedef short int shortlogical;
+typedef char logical1;
+typedef char integer1;
+
+
+
+#else
+
 typedef long int integer;
 typedef unsigned long int uinteger;
 typedef char *address;
@@ -26,6 +45,7 @@
 #define qbit_set(a,b)	((a) |  ((ulongint)1 << (b)))
 #endif
 
+#endif /* __alpha__ */
 #define TRUE_ (1)
 #define FALSE_ (0)
 
@@ -42,11 +62,22 @@
 typedef short ftnlen;
 typedef short ftnint;
 #else
+
+#ifdef __alpha__
+
+typedef int flag;
+typedef int ftnlen;
+typedef int ftnint;
+
+#else
+
 typedef long int flag;
 typedef long int ftnlen;
 typedef long int ftnint;
 #endif
 
+#endif /* __alpha__ */
+
 /*external read, write*/
 typedef struct
 {	flag cierr;
